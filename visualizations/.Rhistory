# best song (top place if ties -> most points)
best_songs <- results
best_songs <- best_songs %>%
mutate(
Grand.Final.Points = ifelse(Grand.Final.Points %in% c("N/A", "DQ", "NQ"), 0, as.numeric(Grand.Final.Points)),
Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), 100, as.numeric(Grand.Final.Place))
) %>%
group_by(Country) %>%
filter(as.integer(Grand.Final.Place) == min(as.integer(Grand.Final.Place))) %>%
filter(as.integer(Grand.Final.Points) == max(as.integer(Grand.Final.Points))) %>%
slice(1)
best_songs
View(best_songs)
best_songs <- results
best_songs <- best_songs %>%
mutate(
Grand.Final.Points = ifelse(Grand.Final.Points %in% c("N/A", "DQ", "NQ"), "0"),
Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "100")
) %>%
group_by(Country) %>%
filter(as.integer(Grand.Final.Place) == min(as.integer(Grand.Final.Place))) %>%
filter(as.integer(Grand.Final.Points) == max(as.integer(Grand.Final.Points))) %>%
slice(1)
best_songs <- results
best_songs <- best_songs %>%
mutate(
Grand.Final.Points = ifelse(Grand.Final.Points %in% c("N/A", "DQ", "NQ"), "0", Grand.Final.Points),
Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "100", Grand.Final.Place)
) %>%
group_by(Country) %>%
filter(as.integer(Grand.Final.Place) == min(as.integer(Grand.Final.Place))) %>%
filter(as.integer(Grand.Final.Points) == max(as.integer(Grand.Final.Points))) %>%
slice(1)
best_songs
best_songs <- mutate(Grand.Final.Points = ifelse(Grand.Final.Points == 0, "N/A",as.character(Grand.Final.Points)),
Grand.Final.Place = ifelse(Grand.Final.Place == 100, "N/A", as.character(Grand.Final.Place)))
best_songs
best_songs <- mutate(Grand.Final.Points = ifelse(as.integer(Grand.Final.Points) == 0, "N/A", Grand.Final.Points),
Grand.Final.Place = ifelse(as.integer(Grand.Final.Place) == 100, "N/A", Grand.Final.Place))
best_songs
best_songs <- results
best_songs <- best_songs %>%
mutate(
Grand.Final.Points = ifelse(Grand.Final.Points %in% c("N/A", "DQ", "NQ"), "0", Grand.Final.Points),
Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "100", Grand.Final.Place)
) %>%
group_by(Country) %>%
filter(as.integer(Grand.Final.Place) == min(as.integer(Grand.Final.Place))) %>%
filter(as.integer(Grand.Final.Points) == max(as.integer(Grand.Final.Points))) %>%
slice(1)
best_songs <- mutate(Grand.Final.Points = ifelse(as.integer(Grand.Final.Points) == 0, "N/A", Grand.Final.Points),
Grand.Final.Place = ifelse(as.integer(Grand.Final.Place) == 100, "N/A", Grand.Final.Place))
names(best_songs)
best_songs <- mutate(Grand.Final.Points = ifelse(as.integer(Grand.Final.Points) == 0, "N/A", Grand.Final.Points),
Grand.Final.Place = ifelse(as.integer(Grand.Final.Place) == 100, "N/A", Grand.Final.Place))
best_songs <- best_songs %>%
mutate(Grand.Final.Points = ifelse(as.integer(Grand.Final.Points) == 0, "N/A", Grand.Final.Points),
Grand.Final.Place = ifelse(as.integer(Grand.Final.Place) == 100, "N/A", Grand.Final.Place))
names(best_songs)
best_songs
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste('"', best_songs$Song, '" - ', best_songs$Artist, "(", best_songs$Year, ")"))
df_best_song_country
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste('"', best_songs$Song, '" - ', best_songs$Artist, "(", best_songs$Year, ")"), sep = "")
df_best_song_country
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = gsub(paste('"', best_songs$Song, '" - ', best_songs$Artist, "(", best_songs$Year, ")"), " ", ""))
df_best_song_country$Best_Song <- gsub(df_best_song_country$Best_Song, " ", "")
Best_Song = "N/A"
df_best_song_country <- data.frame(Country = best_songs$Country,
if (best_songs$Grand.Final.Points == "N/A") {
Best_Song = "N/A"
} else {
Best_Song = paste('"', best_songs$Song, '" - ', best_songs$Artist, "(", best_songs$Year, ") - ", best_songs$Grand.Final.Place, "th place with ", best_songs$Grand.Final.Points, " points")
})
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste('"', best_songs$Song, '" - ', best_songs$Artist, "(", best_songs$Year, ")"))
df_best_song_country
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste("'", best_songs$Song, "' - ", best_songs$Artist, "(", best_songs$Year, ")"))
df_best_song_country
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste(best_songs$Song," by ", best_songs$Artist, "(", best_songs$Year, ")"))
df_best_song_country
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste(best_songs$Song,"by", best_songs$Artist, "from", best_songs$Year),))
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste(best_songs$Song,"by", best_songs$Artist, "from", best_songs$Year))
df_best_song_country
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste(best_songs$Song,"by", best_songs$Artist))
df_best_song_country
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste(gsub(best_songs$Song, " ", "") ,"by", best_songs$Artist))
df_best_song_country
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste(best_songs$Song ,"by", best_songs$Artist))
df_best_song_country
df_country_first_last <- df_country_first_last %>%
left_join(min_years, by = "Country") %>%
left_join(max_years, by = "Country") %>%
left_join(times_attended, by = "Country") %>%
left_join(freq_top_5, by = "Country") %>%
left_join(best_scored_place, by = "Country") %>%
mutate(freq_top_5 = ifelse(is.na(freq_top_5), 0, freq_top_5),
best_scored_place = ifelse(is.infinite(best_scored_place), "N/A", best_scored_place)) %>%
left_join(df_best_song_country, by = "Country")
names(df_country_first_last) = c("Country", "First Eurovision", "Last Eurovision",
"Times Attended", "Top 5 Placements", "Best Place Scored")
reactable(df_country_first_last)
reactable(df_country_first_last)
reactable(df_country_first_last)
df_country_first_last <- df_country_first_last %>%
left_join(min_years, by = "Country") %>%
left_join(max_years, by = "Country") %>%
left_join(times_attended, by = "Country") %>%
left_join(freq_top_5, by = "Country") %>%
left_join(best_scored_place, by = "Country") %>%
left_join(df_best_song_country, by = "Country") %>%
mutate(freq_top_5 = ifelse(is.na(freq_top_5), 0, freq_top_5),
best_scored_place = ifelse(is.infinite(best_scored_place), "N/A", best_scored_place))
df_country_first_last <- df_country_first_last %>%
left_join(min_years, by = "Country") %>%
left_join(max_years, by = "Country") %>%
left_join(times_attended, by = "Country") %>%
left_join(freq_top_5, by = "Country") %>%
left_join(best_scored_place, by = "Country") %>%
mutate(freq_top_5 = ifelse(is.na(freq_top_5), 0, freq_top_5),
best_scored_place = ifelse(is.infinite(best_scored_place), "N/A", best_scored_place))
library(dplyr)
library(reactable)
# data
results = read.csv("../eurovision_results.csv")
events = read.csv("../events_info.csv")
# data frame: country, first attended eurovision, last attended eurovision
df_country_first_last = data.frame(Country = unique(results$Country))
# first attended eurovision year
min_years <- results %>%
group_by(Country) %>%
summarise(first_attended = min(Year, na.rm = TRUE))
#last attended eurovision year
max_years <- results %>%
group_by(Country) %>%
summarise(last_attended = max(Year, na.rm = TRUE))
# how many times a country has attended eurovision
times_attended <- results %>%
group_by(Country) %>%
summarise(times_attended = n())
# nr of times being in the top 5
freq_top_5 <- results %>%
filter(suppressWarnings(as.integer(Grand.Final.Place)) <= 5) %>%
group_by(Country) %>%
summarise(freq_top_5 = n())
freq_top_5
# best scored place
best_scored_place <- results %>%
group_by(Country) %>%
summarise(best_scored_place = min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE))
best_scored_place
# best song (top place if ties -> most points)
best_songs <- results
best_songs <- best_songs %>%
mutate(
Grand.Final.Points = ifelse(Grand.Final.Points %in% c("N/A", "DQ", "NQ"), "0", Grand.Final.Points),
Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "100", Grand.Final.Place)
) %>%
group_by(Country) %>%
filter(as.integer(Grand.Final.Place) == min(as.integer(Grand.Final.Place))) %>%
filter(as.integer(Grand.Final.Points) == max(as.integer(Grand.Final.Points))) %>%
slice(1)
best_songs <- best_songs %>%
mutate(Grand.Final.Points = ifelse(as.integer(Grand.Final.Points) == 0, "N/A", Grand.Final.Points),
Grand.Final.Place = ifelse(as.integer(Grand.Final.Place) == 100, "N/A", Grand.Final.Place))
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste(best_songs$Song ,"by", best_songs$Artist))
df_best_song_country
df_country_first_last <- df_country_first_last %>%
left_join(min_years, by = "Country") %>%
left_join(max_years, by = "Country") %>%
left_join(times_attended, by = "Country") %>%
left_join(freq_top_5, by = "Country") %>%
left_join(best_scored_place, by = "Country") %>%
mutate(freq_top_5 = ifelse(is.na(freq_top_5), 0, freq_top_5),
best_scored_place = ifelse(is.infinite(best_scored_place), "N/A", best_scored_place))
names(df_country_first_last) = c("Country", "First Eurovision", "Last Eurovision",
"Times Attended", "Top 5 Placements", "Best Place Scored")
reactable(df_country_first_last)
df_country_first_last <- df_country_first_last %>%
left_join(min_years, by = "Country") %>%
left_join(max_years, by = "Country") %>%
left_join(times_attended, by = "Country") %>%
left_join(freq_top_5, by = "Country") %>%
left_join(best_scored_place, by = "Country") %>%
mutate(freq_top_5 = ifelse(is.na(freq_top_5), 0, freq_top_5),
best_scored_place = ifelse(is.infinite(best_scored_place), "N/A", best_scored_place))  %>%
left_join(df_best_song_country, by = "Country")
names(df_country_first_last) = c("Country", "First Eurovision", "Last Eurovision",
"Times Attended", "Top 5 Placements", "Best Place Scored")
reactable(df_country_first_last)
names(df_country_first_last) = c("Country", "First Eurovision", "Last Eurovision",
"Times Attended", "Top 5 Placements", "Best Place Scored", "Best Song")
reactable(df_country_first_last)
names(df_country_first_last) = c("Country", "First Eurovision", "Last Eurovision",
"Times Attended", "Top 5 Placements", "Best Place Scored", "Best Song")
df_country_first_last <- df_country_first_last %>%
left_join(min_years, by = "Country") %>%
left_join(max_years, by = "Country") %>%
left_join(times_attended, by = "Country") %>%
left_join(freq_top_5, by = "Country") %>%
left_join(best_scored_place, by = "Country") %>%
mutate(freq_top_5 = ifelse(is.na(freq_top_5), 0, freq_top_5),
best_scored_place = ifelse(is.infinite(best_scored_place), "N/A", best_scored_place))  %>%
left_join(df_best_song_country, by = "Country")
library(dplyr)
library(reactable)
# data
results = read.csv("../eurovision_results.csv")
events = read.csv("../events_info.csv")
# data frame: country, first attended eurovision, last attended eurovision
df_country_first_last = data.frame(Country = unique(results$Country))
# first attended eurovision year
min_years <- results %>%
group_by(Country) %>%
summarise(first_attended = min(Year, na.rm = TRUE))
#last attended eurovision year
max_years <- results %>%
group_by(Country) %>%
summarise(last_attended = max(Year, na.rm = TRUE))
# how many times a country has attended eurovision
times_attended <- results %>%
group_by(Country) %>%
summarise(times_attended = n())
# nr of times being in the top 5
freq_top_5 <- results %>%
filter(suppressWarnings(as.integer(Grand.Final.Place)) <= 5) %>%
group_by(Country) %>%
summarise(freq_top_5 = n())
freq_top_5
# best scored place
best_scored_place <- results %>%
group_by(Country) %>%
summarise(best_scored_place = min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE))
best_scored_place
# best song (top place if ties -> most points)
best_songs <- results
best_songs <- best_songs %>%
mutate(
Grand.Final.Points = ifelse(Grand.Final.Points %in% c("N/A", "DQ", "NQ"), "0", Grand.Final.Points),
Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "100", Grand.Final.Place)
) %>%
group_by(Country) %>%
filter(as.integer(Grand.Final.Place) == min(as.integer(Grand.Final.Place))) %>%
filter(as.integer(Grand.Final.Points) == max(as.integer(Grand.Final.Points))) %>%
slice(1)
best_songs <- best_songs %>%
mutate(Grand.Final.Points = ifelse(as.integer(Grand.Final.Points) == 0, "N/A", Grand.Final.Points),
Grand.Final.Place = ifelse(as.integer(Grand.Final.Place) == 100, "N/A", Grand.Final.Place))
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste(best_songs$Song ,"by", best_songs$Artist))
df_best_song_country
df_country_first_last <- df_country_first_last %>%
left_join(min_years, by = "Country") %>%
left_join(max_years, by = "Country") %>%
left_join(times_attended, by = "Country") %>%
left_join(freq_top_5, by = "Country") %>%
left_join(best_scored_place, by = "Country") %>%
mutate(freq_top_5 = ifelse(is.na(freq_top_5), 0, freq_top_5),
best_scored_place = ifelse(is.infinite(best_scored_place), "N/A", best_scored_place))  %>%
left_join(df_best_song_country, by = "Country")
names(df_country_first_last) = c("Country", "First Eurovision", "Last Eurovision",
"Times Attended", "Top 5 Placements", "Best Place Scored", "Best Song")
reactable(df_country_first_last)
# best scored place
best_scored_place <- results %>%
group_by(Country) %>%
summarise(best_scored_place = as.integer(min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE)))
best_scored_place
# best scored place
best_scored_place <- results %>%
group_by(Country) %>%
summarise(best_scored_place = as.integer(min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE))) %>%
mutate(best_scored_place = ifelse(best_scored_place == Inf, "N/A", best_scored_place))
best_scored_place
# best scored place
best_scored_place <- results %>%
group_by(Country) %>%
summarise(best_scored_place = as.integer(min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE))) %>%
mutate(best_scored_place = ifelse(best_scored_place == na, "N/A", best_scored_place))
# best scored place
best_scored_place <- results %>%
group_by(Country) %>%
summarise(best_scored_place = as.integer(min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE))) %>%
mutate(best_scored_place = ifelse(best_scored_place == NULL, "N/A", best_scored_place))
best_scored_place
NULL
# best scored place
best_scored_place <- results %>%
group_by(Country) %>%
summarise(best_scored_place = min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE)) %>%
mutate(best_scored_place = ifelse(best_scored_place == NULL, "N/A", best_scored_place))
best_scored_place
# best scored place
best_scored_place <- results %>%
group_by(Country) %>%
summarise(best_scored_place = min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE))
best_scored_place
# best scored place
best_scored_place <- results %>%
mutate(Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "100", Grand.Final.Place))%>%
group_by(Country) %>%
summarise(best_scored_place = as.integer(min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE)) )
best_scored_place
# best scored place
best_scored_place <- results %>%
mutate(Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "00000", Grand.Final.Place))%>%
group_by(Country) %>%
summarise(best_scored_place = as.integer(min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE)))
best_scored_place
# best scored place
best_scored_place <- results %>%
mutate(Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "0000", Grand.Final.Place))%>%
group_by(Country) %>%
summarise(best_scored_place = as.integer(min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE)))
library(dplyr)
library(reactable)
# data
results = read.csv("../eurovision_results.csv")
events = read.csv("../events_info.csv")
# data frame: country, first attended eurovision, last attended eurovision
df_country_first_last = data.frame(Country = unique(results$Country))
# first attended eurovision year
min_years <- results %>%
group_by(Country) %>%
summarise(first_attended = min(Year, na.rm = TRUE))
#last attended eurovision year
max_years <- results %>%
group_by(Country) %>%
summarise(last_attended = max(Year, na.rm = TRUE))
# how many times a country has attended eurovision
times_attended <- results %>%
group_by(Country) %>%
summarise(times_attended = n())
# nr of times being in the top 5
freq_top_5 <- results %>%
filter(suppressWarnings(as.integer(Grand.Final.Place)) <= 5) %>%
group_by(Country) %>%
summarise(freq_top_5 = n())
freq_top_5
# best scored place
best_scored_place <- results %>%
mutate(Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "0000", Grand.Final.Place))%>%
group_by(Country) %>%
summarise(best_scored_place = as.integer(min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE)))
best_scored_place
# best song (top place if ties -> most points)
best_songs <- results
best_songs <- best_songs %>%
mutate(
Grand.Final.Points = ifelse(Grand.Final.Points %in% c("N/A", "DQ", "NQ"), "0", Grand.Final.Points),
Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "100", Grand.Final.Place)
) %>%
group_by(Country) %>%
filter(as.integer(Grand.Final.Place) == min(as.integer(Grand.Final.Place))) %>%
filter(as.integer(Grand.Final.Points) == max(as.integer(Grand.Final.Points))) %>%
slice(1)
best_songs <- best_songs %>%
mutate(Grand.Final.Points = ifelse(as.integer(Grand.Final.Points) == 0, "N/A", Grand.Final.Points),
Grand.Final.Place = ifelse(as.integer(Grand.Final.Place) == 100, "N/A", Grand.Final.Place))
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste(best_songs$Song ,"by", best_songs$Artist))
df_best_song_country
df_country_first_last <- df_country_first_last %>%
left_join(min_years, by = "Country") %>%
left_join(max_years, by = "Country") %>%
left_join(times_attended, by = "Country") %>%
left_join(freq_top_5, by = "Country") %>%
left_join(best_scored_place, by = "Country") %>%
mutate(freq_top_5 = ifelse(is.na(freq_top_5), 0, freq_top_5),
best_scored_place = ifelse(is.infinite(best_scored_place), "N/A", best_scored_place))  %>%
left_join(df_best_song_country, by = "Country")
names(df_country_first_last) = c("Country", "First Eurovision", "Last Eurovision",
"Times Attended", "Top 5 Placements", "Best Place Scored", "Best Song")
reactable(df_country_first_last)
# best scored place
best_scored_place <- results %>%
mutate(Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "1111", Grand.Final.Place))%>%
group_by(Country) %>%
summarise(best_scored_place = as.integer(min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE)))
best_scored_place
library(dplyr)
library(reactable)
# data
results = read.csv("../eurovision_results.csv")
events = read.csv("../events_info.csv")
# data frame: country, first attended eurovision, last attended eurovision
df_country_first_last = data.frame(Country = unique(results$Country))
# first attended eurovision year
min_years <- results %>%
group_by(Country) %>%
summarise(first_attended = min(Year, na.rm = TRUE))
#last attended eurovision year
max_years <- results %>%
group_by(Country) %>%
summarise(last_attended = max(Year, na.rm = TRUE))
# how many times a country has attended eurovision
times_attended <- results %>%
group_by(Country) %>%
summarise(times_attended = n())
# nr of times being in the top 5
freq_top_5 <- results %>%
filter(suppressWarnings(as.integer(Grand.Final.Place)) <= 5) %>%
group_by(Country) %>%
summarise(freq_top_5 = n())
freq_top_5
# best scored place
best_scored_place <- results %>%
mutate(Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "1111", Grand.Final.Place))%>%
group_by(Country) %>%
summarise(best_scored_place = as.integer(min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE)))
best_scored_place
# best song (top place if ties -> most points)
best_songs <- results
best_songs <- best_songs %>%
mutate(
Grand.Final.Points = ifelse(Grand.Final.Points %in% c("N/A", "DQ", "NQ"), "0", Grand.Final.Points),
Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "100", Grand.Final.Place)
) %>%
group_by(Country) %>%
filter(as.integer(Grand.Final.Place) == min(as.integer(Grand.Final.Place))) %>%
filter(as.integer(Grand.Final.Points) == max(as.integer(Grand.Final.Points))) %>%
slice(1)
best_songs <- best_songs %>%
mutate(Grand.Final.Points = ifelse(as.integer(Grand.Final.Points) == 0, "N/A", Grand.Final.Points),
Grand.Final.Place = ifelse(as.integer(Grand.Final.Place) == 100, "N/A", Grand.Final.Place))
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste(best_songs$Song ,"by", best_songs$Artist))
df_best_song_country
df_country_first_last <- df_country_first_last %>%
left_join(min_years, by = "Country") %>%
left_join(max_years, by = "Country") %>%
left_join(times_attended, by = "Country") %>%
left_join(freq_top_5, by = "Country") %>%
left_join(best_scored_place, by = "Country") %>%
mutate(freq_top_5 = ifelse(is.na(freq_top_5), 0, freq_top_5),
best_scored_place = ifelse(is.infinite(best_scored_place), "N/A", best_scored_place))  %>%
left_join(df_best_song_country, by = "Country")
names(df_country_first_last) = c("Country", "First Eurovision", "Last Eurovision",
"Times Attended", "Top 5 Placements", "Best Place Scored", "Best Song")
reactable(df_country_first_last)
library(dplyr)
library(reactable)
# data
results = read.csv("../eurovision_results.csv")
events = read.csv("../events_info.csv")
# data frame: country, first attended eurovision, last attended eurovision
df_country_first_last = data.frame(Country = unique(results$Country))
# first attended eurovision year
min_years <- results %>%
group_by(Country) %>%
summarise(first_attended = min(Year, na.rm = TRUE))
#last attended eurovision year
max_years <- results %>%
group_by(Country) %>%
summarise(last_attended = max(Year, na.rm = TRUE))
# how many times a country has attended eurovision
times_attended <- results %>%
group_by(Country) %>%
summarise(times_attended = n())
# nr of times being in the top 5
freq_top_5 <- results %>%
filter(suppressWarnings(as.integer(Grand.Final.Place)) <= 5) %>%
group_by(Country) %>%
summarise(freq_top_5 = n())
freq_top_5
# best scored place
best_scored_place <- results %>%
mutate(Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "NULL", Grand.Final.Place))%>%
group_by(Country) %>%
summarise(best_scored_place = as.integer(min(suppressWarnings(as.integer(Grand.Final.Place)), na.rm = TRUE)))
best_scored_place
# best song (top place if ties -> most points)
best_songs <- results
best_songs <- best_songs %>%
mutate(
Grand.Final.Points = ifelse(Grand.Final.Points %in% c("N/A", "DQ", "NQ"), "0", Grand.Final.Points),
Grand.Final.Place = ifelse(Grand.Final.Place %in% c("N/A", "DQ", "NQ"), "100", Grand.Final.Place)
) %>%
group_by(Country) %>%
filter(as.integer(Grand.Final.Place) == min(as.integer(Grand.Final.Place))) %>%
filter(as.integer(Grand.Final.Points) == max(as.integer(Grand.Final.Points))) %>%
slice(1)
best_songs <- best_songs %>%
mutate(Grand.Final.Points = ifelse(as.integer(Grand.Final.Points) == 0, "N/A", Grand.Final.Points),
Grand.Final.Place = ifelse(as.integer(Grand.Final.Place) == 100, "N/A", Grand.Final.Place))
df_best_song_country <- data.frame(Country = best_songs$Country,
Best_Song = paste(best_songs$Song ,"by", best_songs$Artist))
df_best_song_country
df_country_first_last <- df_country_first_last %>%
left_join(min_years, by = "Country") %>%
left_join(max_years, by = "Country") %>%
left_join(times_attended, by = "Country") %>%
left_join(freq_top_5, by = "Country") %>%
left_join(best_scored_place, by = "Country") %>%
mutate(freq_top_5 = ifelse(is.na(freq_top_5), 0, freq_top_5),
best_scored_place = ifelse(is.infinite(best_scored_place), "N/A", best_scored_place))  %>%
left_join(df_best_song_country, by = "Country")
names(df_country_first_last) = c("Country", "First Eurovision", "Last Eurovision",
"Times Attended", "Top 5 Placements", "Best Place Scored", "Best Song")
reactable(df_country_first_last)
View(best_scored_place)
shiny::runApp('C:/Users/julci/Data_viz_HW4/eurovision_stats')
